import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as e,a as n,b as o,e as c,d as u}from"./app.d6b42b88.js";const l={},i=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),k={href:"https://leetcode.com/problems/evaluate-division/",target:"_blank",rel:"noopener noreferrer"},r=c("\uBB38\uC81C\uB9C1\uD06C"),d=u(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uBCC0\uC218 \uC30D\uC758 \uBC30\uC5F4<code>equations</code>\uACFC \uC2E4\uC218 \uBC30\uC5F4<code>values</code> \uC774 \uC81C\uACF5\uB41C\uB2E4.<br> \uC5EC\uAE30\uC11C equations[i] = [A, B] \uBC0F values[i]\uC740 \uBC29\uC815\uC2DD A/B = values[i]\uC744 \uB098\uD0C0\uB0B8\uB2E4.<br> \uB610\uD55C \uBCC0\uC218 \uC30D \uBC30\uC5F4 <code>queries</code>\uC774 \uC8FC\uC5B4\uC9C4\uB2E4. C/D \uC758 \uAC12\uC744 \uCC3E\uC544\uC11C \uD574\uB2F9 \uBC30\uC5F4\uC5D0 \uC790\uB9AC\uC5D0 \uB2F5\uC744 \uB2F4\uC544\uC11C \uB9AC\uD134\uD558\uBA74 \uB41C\uB2E4.<br> \uB9CC\uC77C \uB2F5\uBCC0\uC744 \uAD6C\uD560 \uC218 \uC5C6\uC744 \uC2DC -1\uC744 \uB9AC\uD134\uD55C\uB2E4.</p><h2 id="\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" aria-hidden="true">#</a> \uC785\uCD9C\uB825 \uC608\uC2DC</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: equations = [[&quot;a&quot;,&quot;b&quot;]], values = [0.5],
       queries = [[&quot;a&quot;,&quot;b&quot;],[&quot;b&quot;,&quot;a&quot;],[&quot;a&quot;,&quot;c&quot;],[&quot;x&quot;,&quot;y&quot;]]
Output: [0.50000,2.00000,-1.00000,-1.00000]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\uC8FC\uC5B4\uC9C4 a/b= 0.5 \uB780 \uAC12\uC73C\uB85C a/b, b/a\uC758 \uAC12\uC744 \uAD6C\uD560 \uC218 \uC788\uC9C0\uB9CC a/c, x/y\uC758 \uAC12\uC740 \uAD6C\uD558\uC9C0 \uBABB \uD55C\uB2E4.</li></ul><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><ol><li>Edge \uAC1D\uCCB4\uB97C \uB9CC\uB4E4\uC5B4\uC11C \uD574\uB2F9 \uAC1D\uCCB4 \uC548\uC5D0 \uBCC0\uC218\uBA85\uACFC \uAC12\uC744 \uB2F4\uB294\uB2E4.</li><li>graph map\uC744 \uB9CC\uB4E0\uB2E4 \uD574\uB2F9 map\uC758 \uD0A4\uB294 \uBCC0\uC218\uC30D\uC758 &#39;0&#39;\uBC88\uC9F8 \uC778\uB371\uC2A4 \uC989 \uB098\uB20C \uB300\uC0C1\uC774 \uB4E4\uC5B4\uAC00\uACE0 \uD574\uB2F9 map\uC758 \uAC12\uC5D0\uB294 \uBCC0\uC218\uC30D\uC758 &#39;1&#39;\uBC88\uC9F8 \uC778\uB371\uC2A4 \uC989 \uB098\uB20C \uAC12\uC774 \uB4E4\uC5B4\uAC00\uB294\uB370 \uB098\uB20C \uAC12\uC758 \uACBD\uC6B0\uC5D0\uB294 \uD558\uB098\uAC00 \uC544\uB2CC \uC5EC\uB7EC\uAC1C\uAC00 \uC8FC\uC5B4 \uC9C8 \uC218 \uC788\uC73C\uB2C8 List\uB97C \uC120\uC5B8\uD574\uC11C \uBAA8\uB450 \uC800\uC7A5\uD55C\uB2E4<br> (ex. [&#39;a&#39;,&#39;b&#39;],[&#39;a&#39;,&#39;c&#39;] \uCC98\uB7FC a/b, a/c \uC5EC\uB7EC\uAC1C\uAC00 \uB4E4\uC5B4 \uC62C \uC218 \uC788\uB2E4.) <table><thead><tr><th>\uD0A4</th><th>\uAC12</th></tr></thead><tbody><tr><td>a</td><td>[ Edge, Edge..]</td></tr><tr><td>b</td><td>[ Edge]</td></tr></tbody></table></li><li>\uC704\uC5D0\uC11C \uC8FC\uC758\uD560 \uC810\uC740 \uB9CC\uC57D \uC8FC\uC5B4\uC9C4 equation \uC774 [&#39;a&#39;,&#39;b&#39;]\uC600\uB2E4\uBA74 a/b, b/a \uCD1D \uB450\uAC1C\uC758 \uAC12\uC774 \uB098\uC628\uB2E4\uB294 \uAC83\uC774\uB2E4.</li><li>\uD574\uB2F9 \uADF8\uB798\uD504\uAC00 \uC644\uC131 \uB418\uC5C8\uB2E4\uBA74 dfs\uB97C \uD1B5\uD574 \uADF8\uB798\uD504\uB97C \uD0D0\uC0C9\uD574\uC11C \uBB38\uC81C\uB97C \uD480 \uC218 \uC788\uB2E4. \uCD9C\uBC1C \uAC12\uACFC \uB3C4\uCC29 \uAC12\uC774 \uC815\uD574\uC838 \uC788\uC73C\uB2C8 map.get(\uCD9C\uBC1C \uAC12)\uC744 \uD558\uC5EC \uB098\uC624\uB294 List\uB97C \uC804\uCCB4 \uC21C\uD68C\uD558\uBA74\uC11C \uB3C4\uCC29 \uAC12\uC5D0 \uB3C4\uB2EC \uD560 \uC218 \uC788\uB098 \uCCB4\uD06C</li><li>\uB2E4\uB140\uC628 Edge\uC5D0 \uB2E4\uC2DC \uBC29\uBB38\uD558\uC9C0 \uBABB\uD558\uB3C4\uB85D visited\uAC80\uC0AC \uB610\uD55C \uD544\uC694\uD558\uB2E4.</li></ol><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Edge</span> <span class="token punctuation">{</span>

  <span class="token class-name">String</span> v<span class="token punctuation">;</span>
  <span class="token keyword">double</span> quotient<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">Edge</span> <span class="token punctuation">(</span><span class="token class-name">String</span> v<span class="token punctuation">,</span> <span class="token keyword">double</span> quotient<span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>v <span class="token operator">=</span> v<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>quotient <span class="token operator">=</span> quotient<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>


  <span class="token keyword">public</span> <span class="token keyword">double</span> dfs <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> graph<span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> visited<span class="token punctuation">,</span> <span class="token class-name">String</span> dividend<span class="token punctuation">,</span> <span class="token class-name">String</span> divisor<span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>graph<span class="token punctuation">.</span>containsKey <span class="token punctuation">(</span>dividend<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>graph<span class="token punctuation">.</span>containsKey <span class="token punctuation">(</span>divisor<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token comment">//\uC608\uC678 \uCC98\uB9AC1. \uAD6C\uD574\uC57C \uD560 \uC815\uBCF4\uAC00 \uADF8\uB798\uD504\uC5D0 \uC5C6\uC744 \uB54C</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dividend<span class="token punctuation">.</span>equals <span class="token punctuation">(</span>divisor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token comment">//\uC608\uC678 \uCC98\uB9AC2. \uB098\uB20C \uB300\uC0C1\uACFC \uB098\uB220\uC57C \uD560 \uAC12\uC774 \uAC19\uC744 \uB54C</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Edge</span> edge <span class="token operator">:</span> graph<span class="token punctuation">.</span>get <span class="token punctuation">(</span>dividend<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>visited<span class="token punctuation">.</span>contains <span class="token punctuation">(</span>edge<span class="token punctuation">.</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">continue</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>edge<span class="token punctuation">.</span>v<span class="token punctuation">.</span>equals <span class="token punctuation">(</span>divisor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> edge<span class="token punctuation">.</span>quotient<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          visited<span class="token punctuation">.</span>add <span class="token punctuation">(</span>dividend<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">double</span> val <span class="token operator">=</span> dfs <span class="token punctuation">(</span>graph<span class="token punctuation">,</span> visited<span class="token punctuation">,</span> edge<span class="token punctuation">.</span>v<span class="token punctuation">,</span> divisor<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> val <span class="token operator">*</span> edge<span class="token punctuation">.</span>quotient<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">calcEquation</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> equations<span class="token punctuation">,</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> quotients<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> queries<span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> answer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span>queries<span class="token punctuation">.</span>size <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> quotients<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> equation <span class="token operator">=</span> equations<span class="token punctuation">.</span>get <span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>graph<span class="token punctuation">.</span>containsKey <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              graph<span class="token punctuation">.</span>put <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>graph<span class="token punctuation">.</span>containsKey <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              graph<span class="token punctuation">.</span>put <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          graph<span class="token punctuation">.</span>get <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Edge</span> <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> quotients<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          graph<span class="token punctuation">.</span>get <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Edge</span> <span class="token punctuation">(</span>equation<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span>quotients<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">//graph \uB9CC\uB4DC\uB294 \uB85C\uC9C1 \uD558\uB098\uC758 \uCFFC\uB9AC\uB85C a-&gt;b,b-&gt;a \uB450 \uAC1C\uC758 \uAC12\uC744 \uC54C \uC218 \uC788\uB2E4.</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> answer<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> query <span class="token operator">=</span> queries<span class="token punctuation">.</span>get <span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
          answer<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dfs <span class="token punctuation">(</span>graph<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span>get <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token comment">//\uADF8\uB798\uD504 \uD0D0\uC0C9</span>

      <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function v(m,b){const s=t("ExternalLinkIcon");return p(),e("div",null,[i,n("p",null,[n("a",k,[r,o(s)])]),d])}var q=a(l,[["render",v],["__file","evaluate-division.html.vue"]]);export{q as default};
