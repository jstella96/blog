import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as o,a as n,b as e,e as c,d as l}from"./app.d6b42b88.js";const u={},i=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),r={href:"https://leetcode.com/problems/most-common-word/",target:"_blank",rel:"noopener noreferrer"},k=c("\uBB38\uC81C\uB9C1\uD06C"),d=l(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uAE08\uC9C0\uB41C \uB2E8\uC5B4\uC758 \uBB38\uC790\uC5F4 \uB2E8\uB77D\uACFC \uBB38\uC790\uC5F4 \uBC30\uC5F4\uC774 \uC8FC\uC5B4\uC9C0\uBA74 \uAE08\uC9C0\uB418\uC9C0 \uC54A\uC740 \uAC00\uC7A5 \uBE48\uBC88\uD55C \uB2E8\uC5B4\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.<br> \uAE08\uC9C0\uB418\uC9C0 \uC54A\uC740 \uB2E8\uC5B4\uAC00 \uD558\uB098 \uC774\uC0C1 \uC788\uACE0, \uB2F5\uBCC0\uC774 \uACE0\uC720\uD558\uB2E4\uB294 \uAC83\uC774 \uBCF4\uC7A5\uB429\uB2C8\uB2E4.<br> \uB2E8\uB77D\uC758 \uB2E8\uC5B4\uB294 \uB300\uC18C\uBB38\uC790\uB97C \uAD6C\uBD84\uD558\uC9C0 \uC54A\uC73C\uBA70 \uB2F5\uBCC0\uC740 \uC18C\uBB38\uC790\uB85C \uBC18\uD658\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4.</p><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>\uBC1B\uC740 \uBB38\uC790\uC5F4\uC744 \uC804\uCC98\uB9AC \uD6C4 \uB744\uC5B4\uC4F0\uAE30 \uAE30\uC900\uC73C\uB85C split \uD558\uC5EC \uBC30\uC5F4\uC5D0 \uB123\uB294\uB2E4 \uAE08\uC9C0\uB2E8\uC5B4\uB294 set\uC5D0 \uB123\uC5B4\uC900\uB2E4 - &gt; \uD3EC\uD568\uC5EC\uBD80 \uAC80\uC99D\uC2DC \uC18D\uB3C4\uB97C O(1)\uC73C\uB85C \uB9CC\uB4E4\uAE30 \uC704\uD574\uC11C \uBB38\uC790\uC5F4\uBC30\uC5F4\uC744 for\uBB38\uC73C\uB85C \uC21C\uD68C\uD558\uBA74\uC11C \uAE08\uC9C0\uB2E8\uC5B4\uAC00 \uC544\uB2CC \uBB38\uC790\uB4E4\uB9CC map\uC5D0 \uB123\uC73C\uBA74\uC11C \uCE74\uC6B4\uD2B8\uB97C \uC138\uC5B4\uC900\uB2E4. \uC774\uB54C max count \uC640 \uC774\uB54C \uD574\uB2F9\uD558\uB294 \uBB38\uC790\uB97C \uC804\uC5ED\uBCC0\uC218\uC5D0 \uC800\uC7A5\uD558\uACE0 for\uBB38\uC774 \uB05D\uB09C \uD6C4 \uD574\uB2F9\uBB38\uC790\uB97C \uBC18\uD658</p><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">mostCommonWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> paragraph<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> banned<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> paragraph<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;[\\\\!\\\\?&#39;,;\\\\.]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.println(paragraph.replaceAll(&quot;[\\\\!\\\\?&#39;,;\\\\.]&quot;, &quot; &quot;).toLowerCase());</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> wordCountMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bannedSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>banned<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span>  str <span class="token operator">:</span> banned<span class="token punctuation">)</span><span class="token punctuation">{</span>
           bannedSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> maxCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> maxWord <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span>  str <span class="token operator">:</span> words<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>bannedSet<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">int</span> wordCount <span class="token operator">=</span> wordCountMap<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>str <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">;</span>
                wordCountMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span> str<span class="token punctuation">,</span> wordCount <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span> wordCount <span class="token operator">&gt;=</span> maxCount<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    maxCount <span class="token operator">=</span> wordCount<span class="token punctuation">;</span>
                    maxWord <span class="token operator">=</span> str<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> maxWord<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(v,b){const s=t("ExternalLinkIcon");return p(),o("div",null,[i,n("p",null,[n("a",r,[k,e(s)])]),d])}var f=a(u,[["render",m],["__file","most-common-word.html.vue"]]);export{f as default};
