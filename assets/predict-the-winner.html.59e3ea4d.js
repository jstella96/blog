import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as e,a as n,b as o,e as c,d as l}from"./app.d6b42b88.js";const u={},i=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),r={href:"https://leetcode.com/problems/predict-the-winner/",target:"_blank",rel:"noopener noreferrer"},k=c("\uBB38\uC81C\uB9C1\uD06C"),d=l(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>integer array <code>nums</code>\uAC00 \uC8FC\uC5B4\uC9C4\uB2E4. player1, player2\uB294 \uC774 array\uB85C \uAC8C\uC784\uC744\uD55C\uB2E4. \uC120\uC218\uB294 \uBC88\uAC08\uC544 \uAC00\uBA74\uC11C turn\uC744 \uAC00\uC9C0\uACE0 \uC2DC\uC791\uC740 player1\uC774 \uD55C\uB2E4 \uB450\uBA85\uC758 \uD50C\uB808\uC774\uC5B4\uB294 socre 0 \uC5D0\uC11C \uC2DC\uC791\uD558\uACE0 \uAC01\uC790\uC758 \uD134\uC5D0 nums[0] , nums[nums.length-1] \uC911 \uD558\uB098\uB97C \uAC00\uC838\uC640 \uC790\uC2E0\uC758 score\uC5D0 \uB354\uD560 \uC218 \uC788\uB2E4. array\uAC00 \uBE44\uBA74 \uAC8C\uC784\uC740 \uB05D\uB09C\uB2E4. \uB9CC\uC57D \uC810\uC218\uAC00 plater1 &gt;= player2\uBA74 true\uB97C return \uD574\uB77C. \uBAA8\uB4E0 \uC120\uD0DD\uC5D0\uC11C \uD50C\uB808\uC774\uC5B4\uB4E4\uC740 \uCD5C\uC801\uC758 \uD50C\uB808\uC774\uB97C \uD558\uACE0 \uC788\uB2E4\uACE0 \uAC00\uC815\uD55C\uB2E4.</p><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>P1 - p2 &gt;= 0 \uC778\uC9C0 \uD655\uC778\uD574\uC57C\uD55C\uB2E4. player1\uC77C\uB54C\uB294 \uC774\uCC28\uC774\uB97C \uCD5C\uB300\uB85C player2\uC77C\uB54C\uB294 \uC774 \uCC28\uC774\uB97C \uCD5C\uC18C\uB85C\uD55C\uB2E4\uACE0 \uC0DD\uAC01\uD558\uC5EC\uC57C \uD55C\uB2E4.</p><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token class-name">PredictTheWinner</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> p1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">boolean</span> p1Turn<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;</span> end<span class="token punctuation">)</span>
            <span class="token keyword">return</span> p1<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>p1Turn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">,</span> p1 <span class="token operator">+</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> p1 <span class="token operator">+</span> nums<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


            <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">,</span> p1 <span class="token operator">-</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> p1 <span class="token operator">-</span> nums<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>bottom<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(v,b){const s=t("ExternalLinkIcon");return p(),e("div",null,[i,n("p",null,[n("a",r,[k,o(s)])]),d])}var y=a(u,[["render",m],["__file","predict-the-winner.html.vue"]]);export{y as default};
