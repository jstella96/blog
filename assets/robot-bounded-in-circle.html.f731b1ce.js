import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as p,c as t,a as n,b as o,e as c,d as l}from"./app.d6b42b88.js";const i={},r=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),u={href:"https://leetcode.com/problems/robot-bounded-in-circle/",target:"_blank",rel:"noopener noreferrer"},k=c("\uBB38\uC81C\uB9C1\uD06C"),d=l(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uBB34\uD55C \uD3C9\uBA74\uC5D0\uC11C \uB85C\uBD07\uC740 \uCC98\uC74C\uC5D0 (0, 0)\uC5D0 \uC11C\uC11C \uBD81\uCABD\uC744 \uD5A5\uD558\uACE0 \uC788\uC2B5\uB2C8\uB2E4.</p><ul><li>\uBD81\uCABD \uBC29\uD5A5\uC740 y\uCD95\uC758 \uC591\uC758 \uBC29\uD5A5\uC785\uB2C8\uB2E4.</li><li>\uB0A8\uCABD \uBC29\uD5A5\uC740 y\uCD95\uC758 \uC74C\uC758 \uBC29\uD5A5\uC785\uB2C8\uB2E4.</li><li>\uB3D9\uCABD \uBC29\uD5A5\uC740 x\uCD95\uC758 \uC591\uC758 \uBC29\uD5A5\uC785\uB2C8\uB2E4.</li><li>\uC11C\uCABD \uBC29\uD5A5\uC740 x\uCD95\uC758 \uC74C\uC758 \uBC29\uD5A5\uC785\uB2C8\uB2E4. \uB85C\uBD07\uC740 \uB2E4\uC74C \uC138 \uAC00\uC9C0 \uBA85\uB839 \uC911 \uD558\uB098\uB97C \uBC1B\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li><li>&quot;G&quot;: 1\uB2E8\uC704 \uC9C1\uC9C4\uD569\uB2C8\uB2E4.</li><li>&quot;L&quot;: \uC67C\uCABD\uC73C\uB85C 90\uB3C4 \uD68C\uC804\uD569\uB2C8\uB2E4(\uC989, \uC2DC\uACC4 \uBC18\uB300 \uBC29\uD5A5).</li><li>&quot;R&quot;: \uC624\uB978\uCABD(\uC989, \uC2DC\uACC4 \uBC29\uD5A5)\uC73C\uB85C 90\uB3C4 \uD68C\uC804\uD569\uB2C8\uB2E4.</li></ul><p>\uB85C\uBD07\uC740 \uC8FC\uC5B4\uC9C4 \uC9C0\uC2DC\uB97C \uC21C\uC11C\uB300\uB85C \uC218\uD589\uD558\uACE0 \uC601\uC6D0\uD788 \uBC18\uBCF5\uD569\uB2C8\uB2E4. \uB85C\uBD07\uC774 \uC6D0\uC744 \uB5A0\uB098\uC9C0 \uC54A\uB3C4\uB85D \uD3C9\uBA74\uC5D0 \uC6D0\uC774 \uC788\uB294 \uACBD\uC6B0\uC5D0\uB9CC true\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.</p><h2 id="\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" aria-hidden="true">#</a> \uC785\uCD9C\uB825 \uC608\uC2DC</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: instructions = &quot;GGLLGG&quot;
Output: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>\uAD6C\uD604 \uBB38\uC81C\uC774\uB2E4. \uC788\uB294 \uADF8\uB300\uB85C \uD480\uAE30</p><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isRobotBounded</span><span class="token punctuation">(</span><span class="token class-name">String</span> instructions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> direction <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">//          N 0</span>
<span class="token comment">//     W 3       E 1</span>
<span class="token comment">//          S 2</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">:</span> instructions<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;G&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>direction<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> y<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> x<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> y<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> x<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;L&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                direction <span class="token operator">=</span> direction <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">3</span> <span class="token operator">:</span> <span class="token punctuation">(</span>direction<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;R&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                direction <span class="token operator">=</span> direction <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>direction<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>direction<span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function v(m,b){const s=e("ExternalLinkIcon");return p(),t("div",null,[r,n("p",null,[n("a",u,[k,o(s)])]),d])}var w=a(i,[["render",v],["__file","robot-bounded-in-circle.html.vue"]]);export{w as default};
