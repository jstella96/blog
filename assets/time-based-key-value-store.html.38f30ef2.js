import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as e,a as n,b as o,e as c,d as l}from"./app.d6b42b88.js";const i={},u=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),k={href:"https://leetcode.com/problems/time-based-key-value-store/",target:"_blank",rel:"noopener noreferrer"},r=c("\uBB38\uC81C\uB9C1\uD06C"),d=l(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uB2E4\uB978 \uD0C0\uC784\uC2A4\uD0EC\uD504\uC5D0\uC11C \uB3D9\uC77C\uD55C \uD0A4\uC5D0 \uB300\uD55C \uC5EC\uB7EC \uAC12\uC744 \uC800\uC7A5\uD558\uACE0 \uD2B9\uC815 \uD0C0\uC784\uC2A4\uD0EC\uD504\uC5D0\uC11C \uD0A4 \uAC12\uC744 \uAC80\uC0C9\uD560 \uC218 \uC788\uB294 \uC2DC\uAC04 \uAE30\uBC18 \uD0A4-\uAC12 \uB370\uC774\uD130 \uAD6C\uC870\uB97C \uC124\uACC4\uD569\uB2C8\uB2E4.</p><ul><li>TimeMap(): \uB370\uC774\uD130 \uAD6C\uC870\uB97C \uCD08\uAE30\uD654\uD569\uB2C8\uB2E4.</li><li>void set(String key, String value, int timestamp): \uC8FC\uC5B4\uC9C4 \uD0C0\uC784\uC2A4\uD0EC\uD504\uC5D0\uC11C \uAC12\uACFC \uD0A4\uB97C \uC800\uC7A5\uD569\uB2C8\uB2E4.</li><li>String get(String key, int timestamp) : timestamp_prev &lt;= timestamp \uC778 set\uC774 \uC774\uC804\uC5D0 \uD638\uCD9C\uB41C \uAC12\uC744 \uBC18\uD658\uD569\uB2C8\uB2E4. \uC774\uB7EC\uD55C \uAC12\uC774 \uC5EC\uB7EC \uAC1C\uC778 \uACBD\uC6B0 \uAC00\uC7A5 \uD070 timestamp_prev\uC640 \uAD00\uB828\uB41C \uAC12\uC744 \uBC18\uD658\uD569\uB2C8\uB2E4. \uAC12\uC774 \uC5C6\uC73C\uBA74 &quot;&quot;\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.</li></ul><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>binary search\uB97C \uC774\uC6A9\uD574\uC900\uB2E4.<br> \uC8FC\uC758\uC810\uC740 \uC77C\uCE58 \uAC12\uC744 \uCC3E\uC9C0 \uBABB\uD588\uC744\uACBD\uC6B0 \uC778\uC811\uD55C \uAC00\uC7A5 \uD070 \uAC12\uC744 \uBC18\uD658\uD574\uC8FC\uAE30 \uB54C\uBB38\uC5D0<br> binary search \uC9C4\uD589\uC911 min \uAC12\uC774 \uBC14\uB00C\uAE30 \uC804\uC5D0 \uC778\uC811\uD55C \uAC12\uB4E4\uC5D0 \uB2F5\uC774 \uC788\uB294\uC9C0 \uD655\uC778\uD574\uBCF4\uB294<br> \uCF54\uB4DC \uCD94\uAC00\uC640 \uBA87 \uAC00\uC9C0\uC758 \uC608\uC678\uCC98\uB9AC\uAC00 \uD544\uC694\uD558\uB2E4.<br><strong>[\uC608\uC678\uCC98\uB9AC]</strong><br> list\uAC2F\uC218\uAC00 1\uC77C \uACBD\uC6B0\uC640 \uB9C8\uC9C0\uB9C9 \uB9AC\uC2A4\uD2B8\uAC12\uC774 \uBE44\uAD50 \uD0C0\uC784\uC874\uBCF4\uB2E4 \uC791\uC744\uACBD\uC6B0</p><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentHashMap</span></span><span class="token punctuation">;</span>

<span class="token comment">//1]\uAC1D\uCCB4 \uB9CC\uB4EC</span>
<span class="token keyword">class</span> <span class="token class-name">TimeDet</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> ts<span class="token punctuation">;</span>
  <span class="token class-name">String</span> value<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">TimeDet</span><span class="token punctuation">(</span><span class="token keyword">int</span> ts<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ts <span class="token operator">=</span> ts<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">TimeMap</span> <span class="token punctuation">{</span>
  <span class="token comment">//2] \uB4E4\uC5B4\uC628 \uAC12\uC744 \uB2F4\uC744 map \uC120\uC5B8</span>
  <span class="token keyword">private</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">TimeDet</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>

  <span class="token comment">//3] TimeMap() \uC740 \uCD08\uAE30\uD654 \uC791\uC5C5\uB9CC</span>
  <span class="token keyword">public</span> <span class="token class-name">TimeMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//4] set()\uC740 \uC874\uC7AC \uC720\uBB34 \uB530\uC838\uC11C list\uC5D0 add()</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TimeDet</span><span class="token punctuation">(</span>timestamp<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//5] get()</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">//\uC5C6\uC73C\uBA74 return</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">//\uC788\uB2E4\uBA74, value \uAC12\uC5D0\uC11C \uD574\uB2F9 ts or \uAC00\uC7A5\uAC00\uAE4C\uC6B4 ts \uCC3E\uC544\uC57C\uD55C\uB2E4.</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TimeDet</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\uC608\uC678\uCC98\uB9AC list\uAC2F\uC218\uAC00 1\uC77C \uACBD\uC6B0\uC640  \uB9C8\uC9C0\uB9C9 \uB9AC\uC2A4\uD2B8\uAC12\uC774 \uBE44\uAD50 \uD0C0\uC784\uC874\uBCF4\uB2E4 \uC791\uC744\uACBD\uC6B0 + \uC18D\uB3C4\uBA74\uC5D0\uC11C\uB3C4 \uC88B\uC74C</span>
    <span class="token keyword">int</span> listSize <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>listSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ts <span class="token operator">&lt;</span> timestamp<span class="token punctuation">)</span>
      <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>listSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>

    <span class="token comment">//b.s\uC774\uC6A9\uC2DC\uC791.</span>
    <span class="token keyword">int</span> low <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> high <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// [(ts1,value1),(ts2,value2),(ts3,value3).....] \uB4E4\uC5B4\uC628 ts \uAC19\uAC70\uB098 \uAC00\uC7A5 \uD070 \uAC12</span>
      <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span><span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
      <span class="token class-name">TimeDet</span> midObj <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>midObj<span class="token punctuation">.</span>ts <span class="token operator">==</span> timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> midObj<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>midObj<span class="token punctuation">.</span>ts <span class="token operator">&lt;</span> timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\uC624\uB978\uCABD \uAC12 \uD06C\uAE30 \uBE44\uAD50 \uD6C4  \uC0AC\uC774 \uAD6C\uAC04\uC778\uC9C0 \uADF8\uAC78 \uD310\uB2E8.</span>
        <span class="token comment">// mid.ts (i) &lt;   ts  &lt; rigth.ts(i+1)</span>
        <span class="token keyword">int</span> rightSide <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rightSide<span class="token punctuation">)</span><span class="token punctuation">.</span>ts <span class="token operator">&gt;</span> timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> midObj<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>midObj<span class="token punctuation">.</span>ts <span class="token operator">&gt;</span> timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\uC67C\uCABD \uAC12 \uD06C\uAE30 \uBE44\uAD50 \uD6C4 \uC0AC\uC774 \uAD6C\uAC04\uC778\uC9C0 \uADF8\uAC78 \uD310\uB2E8.</span>
        <span class="token comment">// left.ts (i) &lt;   ts  &lt; mid.ts (i+1)</span>
        <span class="token keyword">int</span> leftSide <span class="token operator">=</span> mid <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>leftSide<span class="token punctuation">)</span><span class="token punctuation">.</span>ts <span class="token operator">&lt;</span> timestamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>leftSide<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function m(v,b){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",k,[r,o(s)])]),d])}var g=a(i,[["render",m],["__file","time-based-key-value-store.html.vue"]]);export{g as default};
