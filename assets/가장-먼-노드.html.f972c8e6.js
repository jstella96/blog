import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as t,c as o,a as n,b as e,e as c,d as u}from"./app.d6b42b88.js";const i={},l=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),k={href:"https://programmers.co.kr/learn/courses/30/lessons/49189",target:"_blank",rel:"noopener noreferrer"},r=c("\uBB38\uC81C \uB9C1\uD06C"),d=u(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uAC01 \uB178\uB4DC\uC5D0 1\uBD80\uD130 n\uAE4C\uC9C0 \uBC88\uD638\uAC00 \uC801\uD600\uC788\uB294 \uADF8\uB798\uD504\uAC00 \uC788\uB2E4. 1\uBC88 \uB178\uB4DC\uC5D0\uC11C \uCD9C\uBC1C\uD574\uC11C \uCD5C\uB2E8\uACBD\uB85C\uB85C \uC774\uB3D9\uD588\uC744 \uB54C \uAC00\uC7A5 \uBA40\uB9AC \uB5A8\uC5B4\uC9C4 \uB178\uB4DC\uC758 \uAC2F\uC218\uB97C \uAD6C\uD558\uB294 solution\uC744 \uC791\uC131\uD558\uB77C</p><h2 id="\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" aria-hidden="true">#</a> \uC785\uCD9C\uB825 \uC608\uC2DC</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input:
    vertex= [[3, 6], [4, 3], [3, 2], [1, 3], [1, 2], [2, 4], [5, 2]]
    n = 6
Output: 3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>\uCD5C\uB2E8\uACBD\uB85C\uB97C \uCC3E\uB294 \uBB38\uC81C\uC774\uB2C8\uAE4C bfs\uB97C \uC774\uC6A9\uD574\uC11C \uAC19\uC740 \uAC70\uB9AC \uBAA8\uB4E0 \uB178\uB4DC\uB4E4\uC744 \uC6B0\uC120\uC801\uC73C\uB85C \uD0D0\uC0C9\uD574\uC900\uB2E4. dfs\uB97C \uC0AC\uC6A9\uD558\uBA74 \uBB34\uD55C\uB300\uB85C \uB298\uC5B4\uB098\uAC70\uB098 \uC2DC\uAC04\uCD08\uACFC\uC5D0 \uAC78\uB9B4\uB9CC\uD07C \uBE44\uD6A8\uC728\uC801\uC774\uB780 \uC0AC\uC2E4\uC744 \uC78A\uC73C\uBA74 \uC548\uB41C\uB2E4.</p><p>bfs\uB97C \uC774\uC6A9\uD574\uC11C \uBA3C\uC800 \uAC19\uC740\uAC70\uB9AC\uC758 \uB178\uB4DC\uB4E4\uC744 \uD050\uC5D0\uB123\uC740 \uD6C4, \uD604\uC7AC \uAC70\uB9AC\uC5D0\uC11C \uD55C\uBC88\uC5D0 \uAC08 \uC218 \uC788\uB294 \uB178\uB4DC\uB4E4\uC744 \uB610 \uD050\uC5D0 \uB354\uD574\uC8FC\uB294 \uC2DD\uC73C\uB85C \uC9C4\uD589\uD558\uBA74 \uD050\uC5D0\uC11C \uAEBC\uB0B4\uB294 \uAC12\uB4E4\uC740 \uC790\uC5F0\uC2A4\uB7FD\uAC8C \uAC70\uB9AC\uC21C\uC73C\uB85C \uCD9C\uB825\uC774 \uB41C\uB2E4. \uC774\uB54C \uBC29\uBB38\uC5EC\uBD80\uB97C \uD655\uC778\uD574\uC11C \uAC14\uB358 \uB178\uB4DC\uC5D0 \uAC00\uC9C0 \uC54A\uB3C4\uB85D \uD558\uB294\uAC8C \uC911\uC694\uD55C\uB2E4. \uAC70\uB9AC\uB294 \uC704\uACC4\uAC00 \uB118\uC5B4\uAC08 \uB54C \uB9C8\uB2E4 1\uC529 \uB354\uD558\uBA74\uC11C \uBC30\uC5F4\uC5D0 \uAE30\uB85D\uD574\uC900\uB2E4. \uB9C8\uC9C0\uB9C9\uC5D0 \uBAA8\uB4E0 \uB178\uB4DC\uC758 \uCD5C\uB2E8\uAC70\uB9AC\uAC00 \uC801\uD600\uC838 \uC788\uB294 \uBC30\uC5F4\uC5D0\uC11C \uAC00\uC7A5 \uD070 \uAC12\uC744 \uAC00\uC9C4 index\uB4E4\uC744 \uBC18\uD658\uD574\uC8FC\uBA74 \uB41C\uB2E4.</p><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC JavaScript</h2><p>:::: code-group</p><p>::: code-group-item bfs \uD480\uC774:active</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> edge</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> distance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[\uBB34\uC2DC,1\uBC88\uB178\uB4DC\uAE4C\uC9C0,2\uBC88\uB178\uB4DC\uAE4C\uC9C0..];</span>
  <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>source<span class="token punctuation">,</span> destination<span class="token punctuation">]</span> <span class="token keyword">of</span> edge<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\uC790\uBC14\uC2A4\uD06C\uB9BD\uD2B8\uB294 Array\uB85C \uB9CC\uB4E4\uC5B4\uB3C4\uB41C\uB2E4.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>graph<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> graph<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>graph<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>destination<span class="token punctuation">)</span><span class="token punctuation">)</span> graph<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>destination<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>destination<span class="token punctuation">)</span><span class="token punctuation">;</span>
    graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>destination<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">bfs</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> maxDistance <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>distance<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> distance<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">===</span> maxDistance<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token parameter">graph<span class="token punctuation">,</span> source<span class="token punctuation">,</span> distance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
  distance<span class="token punctuation">[</span>source<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uD050\uAC00 \uBE4C \uB54C\uAE4C\uC9C0 \uBC18\uBCF5</span>
    <span class="token keyword">const</span> currentNode <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> nextNodeList <span class="token operator">=</span> graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>currentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> nextNode <span class="token keyword">of</span> nextNodeList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>distance<span class="token punctuation">[</span>nextNode<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\uBC29\uBB38\uC548\uD588\uC73C\uBA74</span>
        distance<span class="token punctuation">[</span>nextNode<span class="token punctuation">]</span> <span class="token operator">=</span> distance<span class="token punctuation">[</span>currentNode<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//\uC774 \uBD80\uBD84 \uC8FC\uC758! =&gt; \uACE0\uBBFC\uD558\uB2E4 \uB2E4\uB978 \uD480\uC774\uBCF4\uACE0 \uD78C\uD2B8\uB97C \uC5BB\uC5C8\uB2E4</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nextNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>::: code-group-item dfs \uB7F0\uD0C0\uC784 \uC5D0\uB7EC</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// DFS\uB85C \uD480\uBA74 visited\uB97C \uC368\uB3C4 \uB7F0\uD0C0\uC784\uC5D0\uB7EC\uAC00 \uBC1C\uC0DD\uD55C\uB2E4. \uD480\uC774\uC5D0\uB530\uB978 \uD480\uC774 \uBC29\uBC95\uC744 \uC798 \uC120\uD0DD\uD558\uC790</span>
<span class="token comment">//\uC2DC\uAC04 \uCD08\uACFC\uAC00 \uB098\uC624\uB294 \uC774\uC720 \uCC98\uC74C \uB178\uB4DC \uBC29\uBB38\uD560 \uB54C \uBAA8\uB4E0 \uB178\uB4DC\uB97C \uAC00\uBC84\uB9AC\uB294 \uBB38\uC81C\uAC00 \uC788\uB2E4!(\uC815\uD655\uB3C4\uB294 100)</span>
<span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> edge</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> distance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[\uBB34\uC2DC,1\uBC88\uB178\uB4DC\uAE4C\uC9C0,2\uBC88\uB178\uB4DC\uAE4C\uC9C0..]</span>
  distance<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">]</span> <span class="token keyword">of</span> edge<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\uC790\uBC14\uC2A4\uD06C\uB9BD\uD2B8\uB294 Array\uB85C \uB9CC\uB4E4\uC5B4\uB3C4\uB41C\uB2E4.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>graph<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> graph<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>graph<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">)</span> graph<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> distance<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> maxDistance <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>distance<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> distance<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">===</span> maxDistance<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> distance<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>distance<span class="token punctuation">[</span>source<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> count<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// visited\uC758 \uC5ED\uD560</span>
  distance<span class="token punctuation">[</span>source<span class="token punctuation">]</span> <span class="token operator">=</span> count<span class="token punctuation">;</span>
  <span class="token keyword">const</span> destinations <span class="token operator">=</span> graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> destination <span class="token keyword">of</span> destinations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>destination<span class="token punctuation">,</span> distance<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>::::</p>`,16);function v(m,b){const s=p("ExternalLinkIcon");return t(),o("div",null,[l,n("p",null,[n("a",k,[r,e(s)])]),d])}var g=a(i,[["render",v],["__file","\uAC00\uC7A5-\uBA3C-\uB178\uB4DC.html.vue"]]);export{g as default};
