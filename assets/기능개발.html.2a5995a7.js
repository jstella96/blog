import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as t,c as e,a as n,b as o,e as c,d as l}from"./app.d6b42b88.js";const i={},u=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),k={href:"https://programmers.co.kr/learn/courses/30/lessons/42586",target:"_blank",rel:"noopener noreferrer"},r=c("\uBB38\uC81C \uB9C1\uD06C"),d=l(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uAE30\uB2A5\uAC1C\uC120 \uC791\uC5C5\uC744 \uC218\uD589\uC911\uC774\uB2E4. \uAC01 \uAE30\uB2A5\uC740 \uC9C4\uB3C4\uAC00 100%\uC77C \uB54C \uBC30\uD3EC \uAC00\uB2A5\uD558\uB2E4. \uAC01 \uAE30\uB2A5\uC758 \uAC1C\uBC1C\uC18D\uB3C4\uB294 \uBAA8\uB450 \uB2E4\uB974\uACE0, \uB4A4\uC5D0 \uC788\uB294 \uAE30\uB2A5\uC774 \uC55E\uC5D0 \uC788\uB294 \uAE30\uB2A5\uBCF4\uB2E4 \uBA3C\uC800 \uC644\uB8CC\uAC00 \uB41C\uB2E4\uBA74 \uC644\uB8CC\uB41C \uAE30\uB2A5\uC740 \uC55E\uC5D0 \uAE30\uB2A5\uC774 \uBC30\uD3EC \uB420 \uB54C \uD568\uAED8 \uBC30\uD3EC \uB41C\uB2E4. \uBA3C\uC800 \uBC30\uD3EC\uB418\uC5B4\uC57C \uD558\uB294 \uC21C\uC11C\uB300\uB85C \uC791\uC5C5\uC758 \uC9C4\uB3C4\uAC00 \uC801\uD78C \uC815\uC218 \uBC30\uC5F4 <code>progresses</code>\uC640 \uAC01 \uC791\uC5C5\uC758 \uAC1C\uBC1C \uC18D\uB3C4\uAC00 \uC801\uD78C \uC815\uC218 \uBC30\uC5F4 <code>speeds</code>\uAC00 \uC8FC\uC5B4\uC9C8 \uB54C \uAC01 \uBC30\uD3EC\uB9C8\uB2E4 \uBA87 \uAC1C\uC758 \uAE30\uB2A5\uC774 \uBC30\uD3EC\uB418\uB294\uC9C0\uB97C return \uD558\uB3C4\uB85D solution \uD568\uC218\uB97C \uC791\uC131\uD558\uB77C</p><h2 id="\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" aria-hidden="true">#</a> \uC785\uCD9C\uB825 \uC608\uC2DC</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input:
    progresses: [93, 30, 55]
    speeds: [1, 30, 5]
Output: [2, 1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>\uC21C\uC11C\uAC00 \uC911\uC694\uD55C \uBB38\uC81C\uB2C8\uAE4C queue\uB97C \uC368\uC57C\uD558\uB294\uAC78 \uC27D\uAC8C \uC0DD\uAC01\uD574\uB0BC \uC218 \uC788\uB2E4.</p><p><strong>\uD480\uC774 1</strong></p><ol><li>\uAC01 \uAE30\uB2A5\uC744 queue\uC5D0 \uB2F4\uB294\uB2E4.</li><li>\uB9E8 \uC55E\uC5D0 \uAE30\uB2A5\uC744 \uAEBC\uB0B4 100%\uAC00 \uB420\uB54C\uAE4C\uC9C0\uC758 \uC2DC\uAC04\uC744 \uACC4\uC0B0\uD55C\uB2E4.</li><li>\uADF8 \uD6C4 queue\uB97C \uC21C\uD68C \uD558\uBA74\uC11C \uC18C\uC694\uC2DC\uAC04\uC774 \uB354 \uD070 \uC791\uC5C5\uC744 \uB9CC\uB098\uAE30 \uC804\uAE4C\uC9C0 count \uD574\uC11C \uB9AC\uD134 \uBC30\uC5F4\uC5D0 \uB123\uB294\uB2E4.</li></ol><p><strong>\uD480\uC774 2</strong><br> \uC704 \uD480\uC774\uB791 \uBC29\uC2DD\uC740 \uAC19\uB2E4. \uC774 \uBC29\uBC95\uC774 \uB354 \uAC00\uB3C5\uC131\uC774 \uC88B\uC740 \uBC29\uBC95\uAC19\uB2E4.</p><ol><li>\uAC01 \uAE30\uB2A5\uBCC4 \uB0A8\uC740 \uC791\uC5C5\uC77C\uC218\uB97C \uACC4\uC0B0\uD574\uC11C queue\uC5D0 \uB123\uB294\uB2E4.</li><li>while\uBB38\uC744 \uC21C\uD68C\uD558\uBA74\uC11C \uB9E8 \uC55E\uC758 \uAE30\uB2A5\uC744 \uAEBC\uB0B4 \uB0A8\uC740 \uC791\uC5C5\uAE30\uAC04\uC744 \uD655\uC778\uD55C \uD6C4</li><li>\uB2E4\uC2DC while\uBB38\uC744 \uC2E4\uD589\uD574\uC11C \uB0A8\uC740 \uC791\uC5C5\uAE30\uAC04\uACFC \uAC19\uAC70\uB098 \uB354 \uC791\uC740 \uC791\uC5C5 \uAE30\uAC04\uC744 \uAC00\uC9C4 \uC791\uC5C5\uB4E4\uB3C4 \uAEBC\uB0B4\uC900\uB2E4. \uC774\uB54C \uCC98\uB9AC\uD55C \uC791\uC5C5\uB4E4 \uCE74\uC6B4\uD2B8\uD574\uC11C \uB9AC\uD134 \uBC30\uC5F4\uC5D0 \uB123\uB294\uB2E4.</li></ol><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-java" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-java" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC Java</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Work</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> progress<span class="token punctuation">;</span>
	<span class="token keyword">double</span> speed<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token class-name">Work</span><span class="token punctuation">(</span><span class="token keyword">int</span> progress<span class="token punctuation">,</span> <span class="token keyword">int</span> speed<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>progress<span class="token operator">=</span>progress<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token operator">=</span>speed<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> progresses<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> speeds<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> answerList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Work</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Work</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span>  i <span class="token operator">&lt;</span> progresses<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Work</span><span class="token punctuation">(</span>progresses<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> speeds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Work</span> work <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> workTime <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> work<span class="token punctuation">.</span>progress<span class="token punctuation">)</span> <span class="token operator">/</span> work<span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
             <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">double</span>  remainWorkTime <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>progress<span class="token punctuation">)</span> <span class="token operator">/</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>remainWorkTime <span class="token operator">&lt;=</span> workTime<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    num<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            answerList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> answer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>answerList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> answerList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                answer<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> answerList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC JavaScript</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">progresses<span class="token punctuation">,</span> speeds</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//1. \uAC01 \uC791\uC5C5\uC774 \uBA87 \uC77C\uC774 \uAC78\uB9AC\uB294\uC9C0 \uD655\uC778</span>
  <span class="token keyword">const</span> remainedWorkDays <span class="token operator">=</span> progresses<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> idx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> item<span class="token punctuation">)</span> <span class="token operator">/</span> speeds<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//2. \uAC19\uC774 \uBC30\uD3EC \uB420 \uC218 \uC788\uB294 \uC870\uAC74 = \uC55E\uC120 \uAC12\uBCF4\uB2E4 \uB4A4\uC758 \uAC12\uC774 \uC791\uC744 \uB54C</span>
  <span class="token keyword">const</span> answer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>remainedWorkDays<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> wordDay <span class="token operator">=</span> remainedWorkDays<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>remainedWorkDays<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> remainedWorkDays<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> wordDay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      remainedWorkDays<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    answer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function v(m,b){const s=p("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[n("a",k,[r,o(s)])]),d])}var y=a(i,[["render",v],["__file","\uAE30\uB2A5\uAC1C\uBC1C.html.vue"]]);export{y as default};
