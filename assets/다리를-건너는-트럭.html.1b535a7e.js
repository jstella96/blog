import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as t,c as e,a as n,b as o,e as c,d as i}from"./app.d6b42b88.js";const l={},u=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),k={href:"https://programmers.co.kr/learn/courses/30/lessons/42584",target:"_blank",rel:"noopener noreferrer"},r=c("\uBB38\uC81C \uB9C1\uD06C"),d=i(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uAE38\uC774\uC81C\uD55C\uACFC \uBB34\uAC8C\uC81C\uD55C\uC774 \uC788\uB294 1\uCC28\uC120 \uB2E4\uB9AC\uB97C \uAC01 \uBB34\uAC8C\uAC00 \uB2E4\uB978 \uD2B8\uB7ED\uC774 \uAC74\uB108\uAC04\uB2E4\uACE0 \uD560 \uB54C \uBAA8\uB4E0 \uD2B8\uB7ED\uC774 \uB2E4\uB9AC\uB97C \uAC74\uB108 \uAC08 \uB54C \uAC78\uB9AC\uB294 \uC2DC\uAC04\uC740?</p><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>\uB2E4\uB9AC\uB97C queue\uB85C \uB9CC\uB4E4\uACE0 \uD2B8\uB7ED\uC774 \uB2E4\uB9AC\uC5D0 \uC9C4\uC785 \uD560 \uB54C queue\uC5D0 offer() \uBE60\uC838\uB098\uC62C\uB54C poll()\uD574\uC900\uB2E4.<br> \uD480\uC7741: \uBC18\uBCF5 \uB2E8\uC704\uB97C \uCD08 \uB2E8\uC704\uB85C \uCCB4\uD06C\uD558\uBA74\uC11C \uD47C\uB2E4. \uD2B8\uB7ED\uC774 \uBABB \uC62C\uB77C\uAC08\uB54C\uB294 queue\uC5D0 0\uC744 \uB123\uC5B4\uC11C \uB9DE\uCDB0\uC900\uB2E4.<br> \uD480\uC7742: \uC9C4\uCD9C\uC785 \uC774\uBCA4\uD2B8 \uAE30\uC900\uC73C\uB85C \uD47C\uB2E4. \uB2E4\uB9AC\uC5D0 \uC81C\uD55C\uC870\uAC74\uC5D0 \uAC78\uB9AC\uC9C0 \uC54A\uC744 \uB54C\uAE4C\uC9C0 queue\uC5D0 \uC790\uB3D9\uCC28 \uB4E4\uC744 \uB123\uACE0 \uCD5C\uB300 \uBB34\uAC8C\uAC00 \uCC28\uBA74 \uD604\uC7AC\uC2DC\uAC04\uC5D0 \uC0C1\uB2E8\uD050\uC758 \uC9C4\uCD9C \uC2DC\uAC04\uC744 \uC5C5\uB370\uC774\uD2B8\uD558\uACE0 \uB2E4\uC74C \uB300\uAE30\uC911\uC778 \uC790\uB3D9\uCC28\uC758 \uC9C4\uC785\uC2DC\uAC04\uC744 \uD604\uC7AC\uC2DC\uAC04\uC73C\uB85C \uB9DE\uCDB0\uC11C \uB123\uB294\uB2E4.</p><p><mark>\uD480\uC7742\uB294 \uD14C\uC2A4\uD2B8 \uCF00\uC774\uC2A4\uB294 \uC131\uACF5\uD558\uB098 \uD480\uC774\uB294 \uC2E4\uD328</mark></p><h2 id="\u1111\u116E\u11AF\u110B\u1175\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uD480\uC774\uCF54\uB4DC</h2><p>:::: code-group</p><p>::: code-group-item \uD480\uC7741:active</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Queue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedList</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> bridge_length<span class="token punctuation">,</span> <span class="token keyword">int</span> weight<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> truck_weights<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">int</span> time <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sum_weight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> idx<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>idx <span class="token operator">==</span> truck_weights<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> bridge_length<span class="token punctuation">)</span><span class="token punctuation">{</span>
                sum_weight<span class="token operator">-=</span>queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sum_weight<span class="token operator">+</span>truck_weights<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">&gt;</span>weight<span class="token punctuation">)</span><span class="token punctuation">{</span>
                queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                time<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>truck_weights<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                sum_weight<span class="token operator">+=</span>truck_weights<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
                time<span class="token operator">++</span><span class="token punctuation">;</span>
                idx<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> time <span class="token operator">+</span> bridge_length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>::: code-group-item \uD480\uC7742.\uC2E4\uD328\uCF54\uB4DC:active</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Queue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedList</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Truck</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> weight<span class="token punctuation">;</span>
  <span class="token keyword">int</span> time<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token class-name">Truck</span> <span class="token punctuation">(</span><span class="token keyword">int</span> weight<span class="token punctuation">,</span> <span class="token keyword">int</span> time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>weight <span class="token operator">=</span> weight<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">=</span> time<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> bridge_length<span class="token punctuation">,</span> <span class="token keyword">int</span> weight<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> truck_weights<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">int</span> nowTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nowTruckWeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> idx<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Truck</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\uB9C8\uC9C0\uB9C9 \uD2B8\uB7ED\uC774 \uB2E4\uB9AC\uC5D0 \uC62C\uB77C\uAC14\uC744 \uB54C, \uBC97\uC5B4\uB09C\uB2E4.</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>idx <span class="token operator">==</span> truck_weights<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">Truck</span> truck <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    nowTime <span class="token operator">=</span> truck<span class="token punctuation">.</span>time <span class="token operator">+</span> bridge_length<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nowTruckWeight<span class="token operator">+</span>truck_weights<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">&gt;</span>weight <span class="token operator">||</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> bridge_length<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//\uB2E4\uC74C \uB4E4\uC5B4 \uC62C \uD2B8\uB7ED \uBB34\uAC8C \uCD08\uACFC\uB418\uAC70\uB098 \uB2E4\uB9AC \uAC00\uB4DD \uCC3C\uC73C\uBA74  \uAE30\uC874\uAEBC \uBE7C\uC900\uB2E4.</span>
                <span class="token class-name">Truck</span> truck <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                nowTruckWeight<span class="token operator">-=</span>truck<span class="token punctuation">.</span>weight<span class="token punctuation">;</span>
                nowTime <span class="token operator">=</span> truck<span class="token punctuation">.</span>time <span class="token operator">+</span> bridge_length<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>nowTime<span class="token operator">++</span><span class="token punctuation">;</span>
                queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Truck</span><span class="token punctuation">(</span>truck_weights<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span>nowTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                nowTruckWeight <span class="token operator">+=</span>truck_weights<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
                idx<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 9. \uB9C8\uC9C0\uB9C9 \uD2B8\uB7ED\uC774 \uB2E4\uB9AC\uC5D0 \uC62C\uB77C\uAC04 \uC0C1\uD0DC\uC5D0\uC11C \uB2E4\uB9AC\uC758 \uAE38\uC774\uB97C \uB354\uD574\uC8FC\uBA74, \uBAA8\uB4E0 \uD2B8\uB7ED\uC774 \uD1B5\uACFC\uD558\uB294\uB370 \uAC78\uB9B0 \uC2DC\uAC04.</span>
        <span class="token keyword">return</span> nowTime<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>



</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>::::</p>`,14);function v(m,b){const s=p("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[n("a",k,[r,o(s)])]),d])}var g=a(l,[["render",v],["__file","\uB2E4\uB9AC\uB97C-\uAC74\uB108\uB294-\uD2B8\uB7ED.html.vue"]]);export{g as default};
