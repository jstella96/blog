import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as t,c as o,a as n,b as e,e as c,d as u}from"./app.d6b42b88.js";const l={},i=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),r={href:"https://programmers.co.kr/learn/courses/30/lessons/42898",target:"_blank",rel:"noopener noreferrer"},k=c("\uBB38\uC81C \uB9C1\uD06C"),d=u(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p><code>m</code> * <code>n</code> \uC758 \uACA9\uC790\uC758 (0,0)\uC5D0\uB294 \uC9D1\uC774 (m-1, n-1)\uC5D0\uB294 \uD559\uAD50\uAC00 \uC788\uB2E4. \uD574\uB2F9 \uACA9\uC790 \uC704\uC5D0 \uBB3C\uC5D0 \uC7A0\uAE34 \uC9C0\uC5ED\uC744 \uB098\uD0C0\uB0B4\uB294 \uC88C\uD45C\uB4E4\uC774 \uBC30\uC5F4 <code>puddels</code>\uB85C \uC8FC\uC5B4\uC9C8 \uB54C \uC624\uB978\uCABD\uACFC \uC544\uB798\uCABD\uC73C\uB85C\uB9CC \uC6C0\uC9C1\uC5EC \uC9D1\uC5D0\uC11C \uD559\uAD50\uAE4C\uC9C0 \uAC08 \uC218 \uC788\uB294 \uCD5C\uB2E8\uACBD\uB85C\uC758 \uAC1C\uC218\uB97C 1,000,000,000,007\uB85C \uB098\uB208 \uB098\uBA38\uC9C0\uB97C return \uD558\uB77C.</p><h2 id="\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" aria-hidden="true">#</a> \uC785\uCD9C\uB825 \uC608\uC2DC</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input:
    m: 4
    n: 3
    puddles: [[2,2]]
Output: 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p>\uB2E8\uC21C \uCD5C\uB2E8 \uACBD\uB85C \uBB38\uC81C\uAC00 \uD55C\uBC88 \uB354 \uAF2C\uC778 \uAC83 \uBFD0\uC774\uB2E4. \uBC29\uBB38 \uC0C1\uD0DC\uB97C \uD45C\uC2DC\uD560 2\uC911 \uBC30\uC5F4\uC744 \uB9CC\uB4E4\uACE0 \uC6C5\uB369\uC774\uAC00 \uC788\uC73C\uBA74 -999 \uD45C\uC2DC\uB97C \uD574\uC900\uB2E4. \uB098\uBA38\uC9C0\uB294 0\uC73C\uB85C \uCC44\uC6B4 \uD6C4 \uCD94\uD6C4 \uBC29\uBB38\uD588\uC73C\uBA74 1\uB85C \uBC14\uAFD4\uC900\uB2E4. \uC804\uC5ED\uBCC0\uC218\uC5D0 \uCD5C\uB2E8\uAC70\uB9AC\uC640 \uCE74\uC6B4\uD2B8 \uBCC0\uC218\uB97C \uC120\uC5B8\uD574\uC11C \uAC19\uC740 \uCD5C\uB2E8\uAC70\uB9AC\uB97C \uAC00\uC9C0\uB294 \uACBD\uB85C\uB4E4\uC744 \uC9D1\uACC4\uD560 \uC218 \uC788\uAC8C \uD55C\uB2E4.</p><h2 id="\u1111\u116E\u11AF\u110B\u1175\u110F\u1169\u1103\u1173-javascript" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175\u110F\u1169\u1103\u1173-javascript" aria-hidden="true">#</a> \uD480\uC774\uCF54\uB4DC JavaScript</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> countMemo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">999</span><span class="token punctuation">,</span> <span class="token comment">//Number.MAX_SAFE_INTEGER,</span>
  <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> puddles</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> gride <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>puddle <span class="token keyword">of</span> puddles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    gride<span class="token punctuation">[</span>puddle<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>puddle<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">999</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> gride<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> m<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> countMemo<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> gride<span class="token punctuation">,</span> count<span class="token punctuation">,</span> xMax<span class="token punctuation">,</span> yMax</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> xMax <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span> y <span class="token operator">&gt;</span> yMax <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>gride<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">999</span> <span class="token operator">||</span> gride<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> xMax <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">==</span> yMax <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>countMemo<span class="token punctuation">.</span>min <span class="token operator">==</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      countMemo<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>countMemo<span class="token punctuation">.</span>min <span class="token operator">&gt;</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      countMemo<span class="token punctuation">.</span>min <span class="token operator">=</span> count<span class="token punctuation">;</span>
      countMemo<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  gride<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token function">dfs</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> gride<span class="token punctuation">,</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> xMax<span class="token punctuation">,</span> yMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> gride<span class="token punctuation">,</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> xMax<span class="token punctuation">,</span> yMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
  gride<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">solution</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function m(v,b){const s=p("ExternalLinkIcon");return t(),o("div",null,[i,n("p",null,[n("a",r,[k,e(s)])]),d])}var y=a(l,[["render",m],["__file","\uB4F1\uAD63\uAE38.html.vue"]]);export{y as default};
