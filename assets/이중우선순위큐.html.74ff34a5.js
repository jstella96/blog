import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as e,a as n,b as o,e as c,d as u}from"./app.d6b42b88.js";const i={},l=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),k={href:"https://programmers.co.kr/learn/courses/30/lessons/42628",target:"_blank",rel:"noopener noreferrer"},r=c("\uBB38\uC81C \uB9C1\uD06C"),d=u(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uC774\uC911 \uC6B0\uC120\uC21C\uC704 \uD050\uB294 \uB2E4\uC74C \uC5F0\uC0B0\uC744 \uD560 \uC218 \uC788\uB294 \uC790\uB8CC\uAD6C\uC870\uB97C \uB9D0\uD55C\uB2E4.</p><pre><code>    \uBA85\uB839\uC5B4
    \`I \uC22B\uC790\`: \uD050\uC5D0 \uC8FC\uC5B4\uC9C4 \uC22B\uC790\uB97C \uC0BD\uC785
    \`D 1\`: \uD050\uC5D0\uC11C \uCD5C\uB313\uAC12\uC744 \uC0AD\uC81C
    \`D -1\`: \uD050\uC5D0\uC11C \uCD5C\uC19F\uAC12\uC744 \uC0AD\uC81C
</code></pre><p>\uC774\uC911 \uC6B0\uC120\uC21C\uC704 \uD050\uAC00 \uD560 \uC5F0\uC0B0 <code>operations</code>\uAC00 \uB9E4\uAC1C\uBCC0\uC218\uB85C \uC8FC\uC5B4\uC9C8 \uB54C, \uBAA8\uB4E0 \uC5F0\uC0B0\uC744 \uCC98\uB9AC\uD55C \uD6C4 \uD050\uAC00 \uBE44\uC5B4\uC788\uC73C\uBA74 [0,0] \uBE44\uC5B4\uC788\uC9C0 \uC54A\uC73C\uBA74 [\uCD5C\uB313\uAC12, \uCD5C\uC19F\uAC12]\uC744 return \uD558\uB3C4\uB85D solution \uD568\uC218\uB97C \uC791\uC131\uD574\uB77C.</p><h2 id="\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" aria-hidden="true">#</a> \uC785\uCD9C\uB825 \uC608\uC2DC</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: [&quot;I 16&quot;,&quot;D 1&quot;]
Output: [0,0]
Explanation: 16\uC744 \uC0BD\uC785 \uD6C4 \uCD5C\uB313\uAC12\uC744 \uC0AD\uC81C\uD55C\uB2E4. \uB9C8\uC9C0\uB9C9 \uACB0\uACFC\uC5D0 \uD050\uAC00 \uBE44\uC5B4\uC788\uC73C\uBBC0\uB85C [0,0]\uC744 \uBC18\uD658\uD55C\uB2E4.

Input: [&quot;I 7&quot;,&quot;I 5&quot;,&quot;I -5&quot;,&quot;D -1&quot;]
Output:	[7,5]
Explanation: 7,5,-5\uB97C \uC0BD\uC785 \uD6C4 \uCD5C\uC19F\uAC12\uC744 \uC0AD\uC81C\uD55C\uB2E4. \uCD5C\uB300\uAC12 7, \uCD5C\uC18C\uAC12 5\uB97C \uBC18\uD658\uD55C\uB2E4.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><ol><li>Java \uD480\uC774<br> max\uC640 min\uC5D0 \uAC12\uC744 \uACC4\uC18D \uB123\uC5B4\uC8FC\uBA74\uC11C count\uB97C \uC13C\uB2E4. \uCD5C\uB300\uAC12\uC774 \uD544\uC694\uD560 \uB550, max\uC5D0\uC11C \uCD5C\uC18C\uAC12\uC774 \uD544\uC694\uD560\uB550 min\uC5D0\uC11C \uAC12\uC744 \uBE7C\uC900\uB2E4. count \uAC00 0\uB9CC \uC544\uB2C8\uBA74 \uC704 \uBC29\uBC95\uC740 \uC62C\uBC14\uB978 \uAC12\uC744 \uB9AC\uD134\uD55C\uB2E4. count \uAC12\uC774 0\uC77C \uB54C \uC608\uC678\uCC98\uB9AC\uB97C \uD574\uC900\uB2E4. .remove()\uB97C \uC0AC\uC6A9\uD574\uC8FC\uBA74 count\uB97C \uC548\uC368\uB3C4 \uB418\uC9C0\uB9CC \uD050\uC758 remove\uD568\uC218\uB294 \uC2DC\uAC04\uBCF5\uC7A1\uB3C4 \uC190\uD574\uAC00 \uC788\uB2E4.</li><li>JavaScript \uD480\uC774<br> JavaScript\uB294 java\uC640 \uB2EC\uB9AC \uB0B4\uBD80\uC801\uC73C\uB85C \uAD6C\uD604\uB418\uC5B4\uC788\uB294 queue\uB294 \uC5C6\uB2E4. \uB300\uC2E0\uC5D0 \uBC30\uC5F4\uC758 \uD568\uC218\uB85C 0\uBC88\uC9F8 index\uC758 \uAC12\uC744 \uAEBC\uB0BC \uC218 \uC788\uB294 shift()\uD568\uC218\uC640 \uB9C8\uC9C0\uB9C9 index\uC758 \uAC12\uC744 \uBC1B\uC744 \uC218 \uC787\uB294 pop()\uD568\uC218\uB97C \uC81C\uACF5\uD558\uB2C8 \uBC30\uC5F4\uC744 \uC774\uC6A9\uD558\uBA74 \uB41C\uB2E4. \uC120\uC5B8\uC2DC\uC5D0 \uC815\uB82C\uADDC\uCE59\uC744 \uB118\uACA8\uC904 \uC218 \uC5C6\uC73C\uBBC0\uB85C \uBC30\uC5F4\uC5D0 \uAC12\uC744 \uB123\uC744 \uB54C\uB9C8\uB2E4(I \uBA85\uB839\uC5B4) \uC624\uB984\uCC28\uC21C\uC73C\uB85C \uC815\uB82C \uD574\uC8FC\uACE0, \uCD5C\uC19F\uAC12 \uC694\uCCAD \uBA85\uB839\uC740 shift() \uCD5C\uB313\uAC12 \uC694\uCCAD \uBA85\uB839\uC740 pop()\uB97C \uC0AC\uC6A9\uD55C\uB2E4. \uC774 \uACBD\uC6B0\uC5D0\uB294 \uC790\uBC14\uD480\uC774 \uCC98\uB7FC max queue \uC640 min queue\uAC00 \uB458 \uB2E4 \uD544\uC694\uD558\uC9C4 \uC54A\uB2E4. queue \uD558\uB098\uBA74 \uCDA9\uBD84\uD558\uB2E4.</li></ol><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-java" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-java" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC Java</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> operations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//int[] answer = new int[2];</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> answer <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> maxPriorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">reverseOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> minPriorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token class-name">String</span> str<span class="token operator">:</span> operations <span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;I&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
                maxPriorityQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
                minPriorityQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                count<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\uBE48 \uD050\uC5D0 \uB370\uC774\uD130\uB97C \uC0AD\uC81C \uC5F0\uC0B0 \uBB34\uC2DC \uC608\uC678\uCC98\uB9AC</span>
                    count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    maxPriorityQueue<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    minPriorityQueue<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        maxPriorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        minPriorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            answer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> maxPriorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            answer<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> minPriorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC JavaScript</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">operations</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> operation <span class="token keyword">of</span> operations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> spittedOperation <span class="token operator">=</span> operation<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>spittedOperation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;I&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>spittedOperation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      queue<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b <span class="token operator">-</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>spittedOperation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>spittedOperation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;-1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\uC608\uC678\uCC98\uB9AC - \uC5C6\uC5B4\uB3C4 \uD2C0\uB9AC\uC9C4 \uC54A\uC73C\uB098 \uB17C\uB9AC\uC801\uC73C\uB85C \uC788\uC5B4\uC57C \uD55C\uB2E4.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> queue<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token function">Number</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Number</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function v(m,b){const s=t("ExternalLinkIcon");return p(),e("div",null,[l,n("p",null,[n("a",k,[r,o(s)])]),d])}var y=a(i,[["render",v],["__file","\uC774\uC911\uC6B0\uC120\uC21C\uC704\uD050.html.vue"]]);export{y as default};
