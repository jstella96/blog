import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as e,a as n,b as o,e as c,d as l}from"./app.d6b42b88.js";const i={},u=n("p",null,"\uD574\uB2F9\uD398\uC774\uC9C0\uB294 2022\uB144 3\uC6D4 \uB178\uC158\uC5D0\uC11C \uB9C8\uC774\uADF8\uB808\uC774\uC158 \uB418\uC5C8\uC2B5\uB2C8\uB2E4.",-1),r={href:"https://programmers.co.kr/learn/courses/30/lessons/42862",target:"_blank",rel:"noopener noreferrer"},k=c("\uBB38\uC81C \uB9C1\uD06C"),d=l(`<h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uBB38\uC81C \uC124\uBA85</h2><p>\uD55C \uAD50\uC2E4\uC5D0 \uB3C4\uB451\uC774 \uB4E4\uC5B4 \uCCB4\uC721\uBCF5\uC744 \uC77C\uBD80 \uD559\uC0DD\uB4E4\uC774 \uCCB4\uC721\uBCF5\uC744 \uB3C4\uB451 \uB9DE\uC558\uB2E4. \uC5EC\uBC8C\uC758 \uCCB4\uC721\uBCF5\uC744 \uAC00\uC9C4 \uD559\uC0DD\uB4E4\uC740 \uBD99\uC5B4\uC788\uB294 \uCD9C\uC11D\uBC88\uD638\uB07C\uB9AC\uB9CC \uBE4C\uB824\uC904 \uC218 \uC788\uB2E4.<br> \uC804\uCCB4 \uD559\uC0DD \uC218 <code>n</code>, \uCCB4\uC721\uBCF5\uC744 \uB3C4\uB451 \uB9DE\uC740 \uD559\uC0DD\uC758 \uCD9C\uC11D\uBC88\uD638 <code>lost</code>, \uC5EC\uBC8C\uC758 \uCCB4\uC721\uBCF5\uC744 \uAC00\uC9C4 \uD559\uC0DD\uC758 \uCD9C\uC11D\uBC88\uD638 <code>reserve</code>\uAC00 \uC8FC\uC5B4\uC9C8 \uB54C \uCCB4\uC721\uC218\uC5C5\uC744 \uB4E4\uC744 \uC218 \uC788\uB294 \uD559\uC0DD\uC758 \uCD5C\uB313\uAC12\uC73C return \uD558\uB77C.</p><p>\uC8FC\uC758\uD560\uC810 : \uB3C4\uB451\uB9DE\uC740 \uD559\uC0DD\uC758 \uCD9C\uC11D\uBC88\uD638\uC640 \uC5EC\uBC8C\uC758 \uCCB4\uC721\uBCF5\uC744 \uAC00\uC9C4 \uD559\uC0DD\uC758 \uCD9C\uC11D\uBC88\uD638\uAC00 \uACB9\uCE60 \uC218 \uC788\uB2E4. \uD574\uB2F9 \uD559\uC0DD\uC740 \uC790\uC2E0\uC758 \uCCB4\uC721\uBCF5\uC744 \uC785\uC5B4\uC57C\uD55C\uB2E4.</p><h2 id="\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8-\u110B\u1168\u1109\u1175" aria-hidden="true">#</a> \uC785\uCD9C\uB825 \uC608\uC2DC</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input:
  n = 5
  lost = [2, 4]
  reserve = [1, 3, 5]
Output: 5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \uBB38\uC81C \uD480\uC774</h2><p><strong>\uD480\uC774 1</strong> \uC778\uC811\uD55C \uCD9C\uC11D\uBC88\uD638\uC758 \uD559\uC0DD\uC5D0\uAC8C\uB9CC \uBE4C\uB9B4 \uC218 \uC788\uB2E4 \uB77C\uB294 \uC810\uC5D0\uC11C \uB204\uAD6C\uC5D0\uAC8C \uC6B0\uC120\uC73C\uB85C \uBE4C\uB9B4 \uAC83\uC778\uAC00 \uB77C\uB294 \uADDC\uCE59\uC744 \uC798 \uC138\uC6CC\uC8FC\uBA74 \uB418\uB294 \uBB38\uC81C\uC600\uB358\uAC70 \uAC19\uB2E4. \uBA3C\uC800 lost\uC758 \uAC12\uC744 \uCD9C\uC11D\uBC88\uD638 \uC21C\uC73C\uB85C \uC815\uB82C \uD6C4 \uC6B0\uC120\uC801\uC73C\uB85C \uC55E \uCD9C\uC11D\uBC88\uD638\uC758 \uD559\uC0DD\uC774 \uC5EC\uBC8C\uC758 \uCCB4\uC6B1\uBCF5\uC744 \uAC00\uC9C0\uACE0 \uC788\uB2E4\uBA74 \uD574\uB2F9 \uD559\uC0DD\uC5D0\uAC8C \uBE4C\uB9B0\uB2E4. \uB9CC\uC57D \uB4B7 \uCD9C\uC11D\uBC88\uD638 \uD559\uC0DD\uC5D0\uAC8C \uBA3C\uC800 \uBE4C\uB9B0\uB2E4\uBA74, \uC55E\uC120 \uCD9C\uC11D\uBC88\uD638 \uD559\uC0DD\uB3C4 \uC5EC\uBC8C\uC758 \uCCB4\uC721\uBCF5\uC774 \uC788\uC744 \uB54C \uB0A8\uB294 \uCCB4\uC721\uBCF5\uC774 \uC0DD\uAE38 \uC218 \uC788\uB2E4. \uB610\uD55C \uADF8\uB85C\uC778\uD574 \uB4A4\uC5D0\uC11C \uCCB4\uC721\uBCF5\uC744 \uBE4C\uB9B4 \uC218 \uC788\uC5C8\uB358 \uD559\uC0DD\uC774 \uBABB \uBE4C\uB9AC\uB294 \uACBD\uC6B0\uAC00 \uC0DD\uAE38 \uC218 \uC788\uB2E4.<br> \uC608\uC2DC) 1,\uC5EC\uBC8C\uC788\uC74C 2.\uB3C4\uB451\uB9DE\uC74C 3.\uC5EC\uBC8C\uC788\uC74C 4.\uB3C4\uB451\uB9DE\uC74C \uC77C \uACBD\uC6B0 2\uBC88 \uCD9C\uC11D\uBC88\uD638\uAC00\uBA3C\uC800 1\uBC88\uC5D0\uAC8C \uBE4C\uB824\uC57C \uD55C\uB2E4. 3\uBC88\uC5D0\uAC8C \uBE4C\uB9AC\uBA74 4\uBC88\uC774 \uBE4C\uB9AC\uC9C0 \uBABB\uD55C\uB2E4.</p><p>\uC608\uC678\uCC98\uB9AC\uB294 \uB354 \uB611\uB611\uD55C \uBC29\uBC95\uC774 \uC788\uC744 \uC218 \uB3C4 \uC788\uC73C\uB098 \uBC14\uB85C \uC0DD\uAC01\uB09C \uBC29\uBC95\uC740 arraylist\uB97C \uC0AC\uC6A9\uD558\uB294 \uAC83</p><p><strong>\uD480\uC7742</strong> \uBB38\uC81C\uC5D0 \uC8FC\uC5B4\uC9C4 \uC870\uAC74 \uB300\uB85C \uCF54\uB4DC\uB97C \uC791\uC131\uD574\uBCF4\uBA74 \uC6B0\uC120 \uC783\uC5B4\uBC84\uB9B0 \uD559\uC0DD\uB4E4\uC744 \uCD9C\uC11D\uBC88\uD638\uB300\uB85C \uC904\uC138\uC6B4\uB2E4\uC74C, \uC55E\uBC88\uD638\uC758 \uD559\uC0DD\uBD80\uD130 \uCCB4\uC721\uBCF5\uC744 \uAD6C\uD55C\uB2E4. \uAD6C\uD560 \uC218 \uC788\uB294 \uC870\uAC74\uC740</p><ol><li>\uC774\uBBF8 \uB098\uC5D0\uAC8C \uC5EC\uBD84\uC758 \uCCB4\uC721\uBCF5\uC774 \uC788\uB2E4.</li><li>\uB098\uC758 \uC55E \uCD9C\uC11D\uBC88\uD638\uAC00 \uC5EC\uBD84\uC758 \uCCB4\uC721\uBCF5\uC774 \uC788\uC73C\uBA74\uC11C \uC790\uC2E0\uC758 \uCCB4\uC721\uBCF5\uC744 \uB3C4\uB09C \uB2F9\uD558\uC9C0 \uC54A\uC558\uB2E4.</li><li>\uB098\uC758 \uB4A4 \uCD9C\uC11D\uBC88\uD638\uAC00 \uC5EC\uBD84\uC758 \uCCB4\uC721\uBCF5\uC774 \uC788\uC73C\uBA74\uC11C \uC790\uC2E0\uC758 \uCCB4\uC721\uBCF5\uC744 \uB3C4\uB09C \uB2F9\uD558\uC9C0 \uC54A\uC558\uB2E4.</li></ol><p>\uC704 \uC870\uAC74\uC744 if \uBB38\uC73C\uB85C \uC791\uC131\uD558\uACE0 \uC5EC\uBD84\uC758 \uCCB4\uC721\uBCF5\uC744 \uC0AC\uC6A9\uD55C \uD559\uC0C9\uC740 reserve \uBC30\uC5F4\uC5D0\uC11C \uC81C\uAC70\uD55C\uB2E4.</p><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-java-\u1111\u116E\u11AF\u110B\u1175-1" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-java-\u1111\u116E\u11AF\u110B\u1175-1" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC Java &amp; \uD480\uC774 1</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> lost<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> reserve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lostList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>lost<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> n <span class="token operator">-</span> lost<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> item <span class="token operator">:</span> reserve<span class="token punctuation">)</span><span class="token punctuation">{</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> item <span class="token operator">:</span> lost<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//\uC5EC\uBC8C \uC637 \uC788\uB294 \uC560 \uC911\uC5D0, \uAC00\uC9C4 \uC637 \uC788\uC73C\uBA74</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                lostList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> item <span class="token operator">:</span> lostList<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>item<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>item<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript-\u1111\u116E\u11AF\u110B\u1175-2" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u110F\u1169\u1103\u1173-javascript-\u1111\u116E\u11AF\u110B\u1175-2" aria-hidden="true">#</a> \uD480\uC774 \uCF54\uB4DC JavaScript &amp; \uD480\uC774 2</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> lost<span class="token punctuation">,</span> reserve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> answer <span class="token operator">=</span> n <span class="token operator">-</span> lost<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  lost <span class="token operator">=</span> lost<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> lostNum <span class="token keyword">of</span> lost<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reserve<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>lostNum<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> reserve<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>lostNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reserve<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        answer<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reserve<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>lostNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>lost<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>lostNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> reserve<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>lostNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reserve<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        answer<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reserve<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>lostNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>lost<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>lostNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> reserve<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>lostNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reserve<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        answer<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function v(m,b){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",r,[k,o(s)])]),d])}var h=a(i,[["render",v],["__file","\uCCB4\uC721\uBCF5.html.vue"]]);export{h as default};
